const http = require("node:http");
const { findAvaliblePort } = require("./free-port");
const fs = require("node:fs");

const desiredPort = process.env.PORT ?? 3000;

const processRequest = (req, res) => {
  const { method, url } = req;
  console.log(url);
  switch (method) {
    case "GET":
      switch (url) {
        case "/":
          res.setHeader("Content-Type", "text/html; charset=utf-8");
          res.end("<h1>Bienvenidos a mi p√°gina de inicio</h1>");
          break;
        case "/favicon.ico":
          fs.readFile("./assets/favicon.png", (err, data) => {
            if (err) {
              res.statusCode = 500;
              res.end("<h1>500 Internal Server Error</h1>");
            } else {
              res.setHeader("Content-Type", "image/png");
              res.end(data);
            }
          });
          break;
        default:
          res.statusCode = 405;
          res.end("<h1>404 Not Found</h1>");
          break;
      }
      break;

    case "POST":
      switch (url) {
        case "/articles/new":
          let body = "";

          req.on("data", (chunk) => {
            body += chunk.toString();
          });

          req.on("end", () => {
            const data = JSON.parse(body);

            // Guardar la info en objeto
            res.writeHead(201, {
              "Content-Type": "application/json; charset=utf-8",
            });
            res.end(JSON.stringify(data));
          });

          break;
      }
      break;

    default:
      res.statusCode = 405;
      res.end("<h1>405 Method Not Allowed</h1>");
      break;
  }
};

const server = http.createServer(processRequest);

findAvaliblePort(desiredPort).then((port) => {
  server.listen(port, () => {
    console.log(`server listening in http://localhost:${port}`);
  });
});
